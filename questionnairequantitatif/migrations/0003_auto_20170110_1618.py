# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-01-10 21:18
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('questionnairequantitatif', '0002_auto_20170110_1518'),
    ]

    operations = [
        migrations.CreateModel(
            name='Questionnairequantitatif',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('poids_total', models.DecimalField(decimal_places=1, default='0', help_text='ex format de réponse : 50.3 avec une décimale seulement', max_digits=15, verbose_name='Poids total des produits récoltés (en kg) :')),
                ('nombre_varietes', models.IntegerField(default='0', help_text='(variété = référé aux différents types d’un légume, fruit, fleur, herbe, etc. – ex : si vous cultivez des tomates cerises noires, des tomates «cœur de bœuf» et des aubergines «black beauty», vous cultivez en tout 3 variétés) (ex format de réponse : 50)', verbose_name='Nombre de variétés de plantes cultivées dans l’ensemble des jardins :')),
                ('nombre_personnes_toute_activite', models.IntegerField(default='0', help_text='ex\u200b \u200bformat\u200b \u200bde\u200b \u200bréponse :\u200b \u200b100)', verbose_name='Nombre de personnes qui ont participé aux activités organisées, toutes catégories confondues \u200b(ateliers, jardin collectif, cuisines collectives, marché,etc.)')),
                ('nombre_educateurs', models.IntegerField(default='0', help_text='activité éducative = activité dirigée par une personne animatrice qui vise à développer des compétences spécifiques ou des connaissances sur un sujet en particulier chez les participants. Ex: ateliers, conférences, activités de groupe dans un jardin sur un sujet en particulier (ex format de réponse : 50)', verbose_name='Nombre de personnes qui ont participé aux activités éducatives seulement')),
                ('nombre_heures_activite', models.IntegerField(default='0', help_text='ex format de réponse : 10', verbose_name='Nombre d’heures d’activités éducatives organisées')),
                ('nombre_jardiniers', models.IntegerField(default='0', help_text='peuvent être des jardiniers réguliers ou sporadiques (ex format de réponse : 30)', verbose_name='Nombre de personnes qui jardinent')),
                ('nombre_heures_jardins', models.IntegerField(default='0', help_text='ex format de réponse : 700', verbose_name='Nombre d’heures passées par l’ensemble des jardiniers dans les jardins')),
                ('nombre_benevoles', models.IntegerField(default='0', help_text='bénévole = personne qui donne de son temps gratuitement pour aider au fonctionnement de l’organisme; peut être différent d’une personne qui participe aux activités de jardinage pour recevoir les produits récoltés (ex format de réponse : 50)', verbose_name='Nombre total de bénévoles')),
                ('nombre_heures_benevoles', models.IntegerField(default='0', help_text='ex format de réponse : 700', verbose_name='Nombre d’heures de bénévolat fournies par l’ensemble des bénévoles')),
                ('ca_total', models.IntegerField(default='0', help_text='ex format de réponse : 25000', verbose_name='Chiffre de ventes total du marché en dollars ($)')),
                ('ca_agriculture_urbaine', models.IntegerField(default='0', help_text='ex format de réponse : 10000', verbose_name='Chiffre de ventes du marché pour les produits issus d’agriculture urbaine seulement, en dollars ($)')),
                ('nombre_paniers', models.IntegerField(default='0', help_text='ex format de réponse : 50', verbose_name='Nombre de paniers de légumes vendus')),
                ('prix_panier', models.IntegerField(default='0', help_text='ex format de réponse : 20', verbose_name='Prix moyen de vente d’un panier de légumes en dollars ($)')),
                ('semis', models.IntegerField(default='0', help_text='ex format de réponse : 1000', verbose_name='Nombre des plantules (semis) produits')),
                ('ca_semis', models.IntegerField(default='0', help_text='ex format de réponse : 3000', verbose_name='Chiffre de vente des plantules (semis) produits en dollars ($)')),
                ('nombre_semis_rustiques', models.IntegerField(default='0', help_text='ex format de réponse : 15', verbose_name='Nombre de variétés ancestrales/rustiques de plantules produits')),
                ('nombre_ruches', models.IntegerField(default='0', help_text='ex format de réponse : 2', verbose_name='Nombre de ruches entretenues')),
                ('poids_miel', models.IntegerField(default='0', help_text='ex format de réponse : 30', verbose_name='Quantité de miel produit en litres')),
                ('poids_composte', models.IntegerField(default='0', help_text='ex format de réponse : 1000', verbose_name='Poids du composte produit dans l’ensemble des jardins en kg')),
                ('poids_pluie', models.IntegerField(default='0', help_text='ex format de réponse : 1000', verbose_name='Quantité d’eau de pluie ramassée en litres')),
                ('nombre_heures_enfant', models.IntegerField(default='0', help_text='ex format de réponse : 100', verbose_name='Nombre d’heures d’activités organisées spécifiquement pour les enfants')),
                ('nombre_heures_aines', models.IntegerField(default='0', help_text='ex format de réponse : 100', verbose_name='Nombre d’heures d’activités organisées spécifiquement pour les personnes aînées')),
                ('nombre_sujets', models.IntegerField(default='0', help_text='par exemple une série d’ateliers peut porter sur : l’introduction à l’agriculture urbaine, la construction de bacs à double fond, l’introduction à la cuisine italienne – pour un total de 3 sujets abordés (ex format de réponse : 5)', verbose_name='Nombre de sujets différents abordés dans l’ensemble des ateliers organisés')),
                ('nom_organisme', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='questionnairequantitatif.Organisme')),
            ],
        ),
        migrations.DeleteModel(
            name='Questionnairequantitatiffacultatif',
        ),
        migrations.RemoveField(
            model_name='questionnairequantitatifobligatoire',
            name='nom_organisme',
        ),
        migrations.DeleteModel(
            name='Questionnairequantitatifobligatoire',
        ),
    ]
